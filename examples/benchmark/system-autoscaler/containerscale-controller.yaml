apiVersion: v1
kind: ServiceAccount
metadata:
  name: containerscale-controller
  namespace: kube-system
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system-autoscaler:containerscale-controller
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "nodes"]
    verbs: ["update", "get", "watch", "list"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["*"]
  - apiGroups: ["systemautoscaler.polimi.it"]
    resources: ["servicelevelagreements"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["systemautoscaler.polimi.it"]
    resources: ["containerscales"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system-autoscaler:containerscale-controller
subjects:
  - kind: ServiceAccount
    name: containerscale-controller
    namespace: kube-system
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: system-autoscaler:containerscale-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: containerscale-controller
  namespace: kube-system
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: containerscale-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: containerscale-controller
    spec:
      automountServiceAccountToken: true
      serviceAccountName: containerscale-controller
      containers:
        - name: containerscale-controller
          image: lterrac/containerscale-controller:0.1.0
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi


